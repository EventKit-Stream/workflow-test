name: "✅ PR Checks: Lint, Test, Version"

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: checks-${{ github.event.pull_request.head.sha || github.sha }}
  cancel-in-progress: true

jobs:
  # Lint the project with ESLint using Bun.
  lint:
    name: "🧹 Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4

      - name: "🥖 Set up Bun"
        uses: oven-sh/setup-bun@v2

      - name: "📦 Install dependencies"
        run: bun install

      - name: "🔎 Run ESLint"
        run: bun run lint

  # Run unit tests with Bun.
  test:
    name: "🧪 Test"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4

      - name: "🥖 Set up Bun"
        uses: oven-sh/setup-bun@v2

      - name: "📦 Install dependencies"
        run: bun install

      - name: "🧪 Run unit tests"
        run: bun run test -- --run

  # Ensure package.json version was bumped in PRs when relevant.
  version-check:
    name: "🏷️ Version bump check"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: "📥 Checkout repository (full history)"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "🔎 Detect package.json version change"
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: package.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "❌ Fail if version not bumped"
        if: steps.check.outputs.changed == 'false'
        run: |
          echo "::error::package.json version not changed in this PR"; exit 1;

      - name: "📝 Log version change"
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "Version changed to ${{ steps.check.outputs.version }} (type: ${{ steps.check.outputs.type }}) in commit ${{ steps.check.outputs.commit }}"
