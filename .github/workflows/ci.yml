name: CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      sub_version:
        description: 'Sub-version (e.g., alpha, beta, rc)'
        required: true
      release_notes:
        description: 'Release notes'
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun run test

  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: package.json
          token: ${{ secrets.GITHUB_TOKEN }}

  approval:
    runs-on: ubuntu-latest
    needs: [lint, test, version-check]
    if: github.event_name == 'pull_request'
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1

  docker:
    runs-on: ubuntu-latest
    needs: [approval]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  package:
    runs-on: ubuntu-latest
    needs: [approval]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun run build
      - run: npm publish --registry https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [docker, package]
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}${{ github.event.inputs.sub_version && format('-{0}', github.event.inputs.sub_version) || '' }}
          prerelease: ${{ github.event.inputs.sub_version != '' }}
          body: ${{ github.event.inputs.release_notes || 'Auto-generated release notes' }}
          generate_release_notes: ${{ !github.event.inputs.release_notes }}
